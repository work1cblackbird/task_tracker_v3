from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler
from config import Config
import database


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–æ–ª—å."""
    user = update.effective_user
    username = user.username
    user_id = user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if username == Config.ADMIN_USERNAME:
        role = Config.ROLES["ADMIN"]
    else:
        role = Config.ROLES["USER"]

    # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    database.add_or_update_user(user_id, username, role)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if role == Config.ROLES["ADMIN"]:
        keyboard = [
            [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task")],
            [InlineKeyboardButton("üìã –í—Å–µ –∑–∞–¥–∞—á–∏", callback_data="all_tasks")],
            [InlineKeyboardButton("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data="manage_users")]
        ]
    elif role == Config.ROLES["MANAGER"]:
        keyboard = [
            [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task")],
            [InlineKeyboardButton("üìã –í—Å–µ –∑–∞–¥–∞—á–∏", callback_data="all_tasks")]
        ]
    else:
        keyboard = [
            [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task")],
            [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏", callback_data="my_tasks")]
        ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.full_name}!\n–í–∞—à–∞ —Ä–æ–ª—å: {role}",
        reply_markup=reply_markup
    )


async def promote_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–≤—ã—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)."""
    query = update.callback_query
    user_id_to_promote = int(query.data.split("_")[1])

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_user = query.from_user.username
    if current_user != Config.ADMIN_USERNAME:
        await query.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –≤ –ë–î
    database.update_user_role(user_id_to_promote, Config.ROLES["MANAGER"])
    await query.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {Config.ROLES['MANAGER']}")
    await query.edit_message_text(
        text=f"–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {Config.ROLES['MANAGER']}",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="user_list")]
        ])
    )


async def demote_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–Ω–∏–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ –æ–±—ã—á–Ω–æ–≥–æ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)."""
    query = update.callback_query
    user_id_to_demote = int(query.data.split("_")[1])

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_user = query.from_user.username
    if current_user != Config.ADMIN_USERNAME:
        await query.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –≤ –ë–î
    database.update_user_role(user_id_to_demote, Config.ROLES["USER"])
    await query.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–Ω–∏–∂–µ–Ω –¥–æ {Config.ROLES['USER']}")
    await query.edit_message_text(
        text=f"–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {Config.ROLES['USER']}",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="user_list")]
        ])
    )


async def delete_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)."""
    query = update.callback_query
    user_id_to_delete = int(query.data.split("_")[1])

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_user = query.from_user.username
    if current_user != Config.ADMIN_USERNAME:
        await query.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        return

    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    database.delete_user(user_id_to_delete)
    await query.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω")
    await query.edit_message_text(
        text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="user_list")]
        ])
    )


async def show_user_list(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)."""
    query = update.callback_query
    current_user = query.from_user.username

    if current_user != Config.ADMIN_USERNAME:
        await query.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        return

    users = database.get_all_users()
    keyboard = []

    for user in users:
        user_id = user[0]
        username = user[1]
        role = user[2]

        if role == Config.ROLES["USER"]:
            keyboard.append([
                InlineKeyboardButton(f"@{username} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)", callback_data=f"user_{user_id}"),
                InlineKeyboardButton("üëî –ü–æ–≤—ã—Å–∏—Ç—å", callback_data=f"promote_{user_id}")
            ])
        elif role == Config.ROLES["MANAGER"]:
            keyboard.append([
                InlineKeyboardButton(f"@{username} (–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å)", callback_data=f"user_{user_id}"),
                InlineKeyboardButton("üë§ –ü–æ–Ω–∏–∑–∏—Ç—å", callback_data=f"demote_{user_id}")
            ])
        keyboard.append([
            InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_{user_id}")
        ])

    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_menu")])

    await query.edit_message_text(
        text="–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


def setup_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(promote_user, pattern="^promote_"))
    application.add_handler(CallbackQueryHandler(demote_user, pattern="^demote_"))
    application.add_handler(CallbackQueryHandler(delete_user, pattern="^delete_"))
    application.add_handler(CallbackQueryHandler(show_user_list, pattern="^user_list"))