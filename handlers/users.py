# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏, –ø—Ä–æ—Ñ–∏–ª—å
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)
from config import BotConfig, Roles
from database import db
from utils.keyboards import get_back_button, get_main_menu_keyboard

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

class UserHandlers:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"""

    def __init__(self, application):
        self.application = application
        self._register_handlers()

    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        handlers = [
            CommandHandler("profile", self.profile_handler),
            CallbackQueryHandler(self.manage_users_handler, pattern="^manage_users$"),
            CallbackQueryHandler(self.change_role_handler, pattern="^change_role_"),
        ]
        for handler in handlers:
            self.application.add_handler(handler)

    async def profile_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user = update.effective_user
        user_data = db.get_user(user.username)

        if not user_data:
            db.add_user(user.username)
            user_data = (user.username, Roles.DEFAULT_ROLE)

        role_name = "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" if user_data[1] == Roles.USER else \
                   "üëî –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å" if user_data[1] == Roles.MANAGER else \
                   "üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"

        text = (
            f"üìå –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
            f"–ò–º—è: {user.full_name}\n"
            f"Username: @{user.username}\n"
            f"–†–æ–ª—å: {role_name}"
        )

        keyboard = []
        if user.username == BotConfig.ADMIN_USERNAME:
            keyboard.append([InlineKeyboardButton(
                "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", 
                callback_data="manage_users"
            )])

        keyboard.append([get_back_button()])

        await update.message.reply_text(
            text,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    async def manage_users_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        if update.effective_user.username != BotConfig.ADMIN_USERNAME:
            await update.callback_query.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", show_alert=True)
            return

        users = db.get_all_users()
        keyboard = []

        for user in users:
            if user[1] == BotConfig.ADMIN_USERNAME:
                continue

            role_icon = "üë§" if user[2] == Roles.USER else "üëî"
            keyboard.append([
                InlineKeyboardButton(
                    f"{role_icon} @{user[1]} ({user[2]})",
                    callback_data=f"user_detail_{user[1]}"
                )
            ])

        keyboard.append([get_back_button()])

        await update.callback_query.message.edit_text(
            "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    async def change_role_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if update.effective_user.username != BotConfig.ADMIN_USERNAME:
            await update.callback_query.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", show_alert=True)
            return

        data = update.callback_query.data.split("_")
        username = data[2]
        new_role = data[3]

        if username == BotConfig.ADMIN_USERNAME:
            await update.callback_query.answer("–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", show_alert=True)
            return

        db.update_user_role(username, new_role)
        await update.callback_query.answer(f"–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} –∏–∑–º–µ–Ω–µ–Ω–∞")
        await self.manage_users_handler(update, context)

def register_user_handlers(application):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    UserHandlers(application)