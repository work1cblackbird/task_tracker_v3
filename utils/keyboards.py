from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from config import Config

class Keyboards:
    @staticmethod
    def get_main_menu(role):
        """
        –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ReplyKeyboardMarkup
        """
        if role == Config.ROLES["ADMIN"]:
            keyboard = [
                ["‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", "üìã –í—Å–µ –∑–∞–¥–∞—á–∏"],
                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"]
            ]
        elif role == Config.ROLES["MANAGER"]:
            keyboard = [
                ["‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", "üìã –í—Å–µ –∑–∞–¥–∞—á–∏"]
            ]
        else:  # USER
            keyboard = [
                ["‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", "üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏"]
            ]
        
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_task_actions(task_status, is_admin):
        """
        –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–¥–∞—á–µ–π
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup
        """
        buttons = []
        
        # –û–±—â–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π
        buttons.append([InlineKeyboardButton("‚úèÔ∏è –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="comment_task")])
        
        # –ö–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
        if is_admin:
            if task_status == "new":
                buttons.append([InlineKeyboardButton("üõ† –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data="take_task")])
            elif task_status == "in_progress":
                buttons.append([InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="complete_task")])
            elif task_status == "done":
                buttons.append([InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data="reopen_task")])
            
            buttons.append([InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data="delete_task")])
        
        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_filters_menu():
        """
        –ú–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup
        """
        buttons = [
            [
                InlineKeyboardButton("üîò –í—Å–µ", callback_data="filter_all"),
                InlineKeyboardButton("‚ö™Ô∏è –ù–æ–≤—ã–µ", callback_data="filter_new"),
                InlineKeyboardButton("‚ö™Ô∏è –í —Ä–∞–±–æ—Ç–µ", callback_data="filter_in_progress"),
                InlineKeyboardButton("‚ö™Ô∏è –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ", callback_data="filter_done")
            ],
            [
                InlineKeyboardButton("üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data="filter_today"),
                InlineKeyboardButton("üìÖ –ù–µ–¥–µ–ª—è", callback_data="filter_week"),
                InlineKeyboardButton("üìÖ –ú–µ—Å—è—Ü", callback_data="filter_month"),
                InlineKeyboardButton("üìÖ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π", callback_data="filter_custom")
            ]
        ]
        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_pagination(current_page, total_pages):
        """
        –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup
        """
        buttons = []
        if total_pages > 1:
            buttons.append([
                InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f"prev_{current_page}"),
                InlineKeyboardButton(f"{current_page}/{total_pages}", callback_data="ignore"),
                InlineKeyboardButton("‚û°Ô∏è", callback_data=f"next_{current_page}")
            ])
        return InlineKeyboardMarkup(buttons) if buttons else None

    @staticmethod
    def get_user_management_buttons(user_role):
        """
        –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∞)
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup
        """
        buttons = []
        if user_role == Config.ROLES["USER"]:
            buttons.append([InlineKeyboardButton("üëî –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º", callback_data="promote_user")])
        elif user_role == Config.ROLES["MANAGER"]:
            buttons.append([InlineKeyboardButton("üë§ –ü–æ–Ω–∏–∑–∏—Ç—å –¥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="demote_user")])
        
        buttons.append([InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data="delete_user")])
        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_confirmation_buttons():
        """
        –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup
        """
        buttons = [
            [
                InlineKeyboardButton("‚úÖ –î–∞", callback_data="confirm_yes"),
                InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="confirm_no")
            ]
        ]
        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_back_button():
        """
        –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup
        """
        return InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="go_back")]])