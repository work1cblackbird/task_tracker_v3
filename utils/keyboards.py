# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏ –∫–Ω–æ–ø–æ–∫
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from config import BotConfig, Roles, TaskStatuses

class Keyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞"""

    @staticmethod
    def get_main_menu_keyboard(username):
        """
        –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (ReplyKeyboardMarkup)
        :param username: Telegram username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: ReplyKeyboardMarkup
        """
        is_admin = username == BotConfig.ADMIN_USERNAME

        if is_admin:
            keyboard = [
                ["‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", "üìã –í—Å–µ –∑–∞–¥–∞—á–∏"],
                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"]
            ]
        else:
            keyboard = [
                ["‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", "üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏"]
            ]

        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_task_keyboard(task_status, current_user, task_id=None):
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–µ–π (InlineKeyboardMarkup)
        :param task_status: –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
        :param current_user: Username —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param task_id: ID –∑–∞–¥–∞—á–∏ (–¥–ª—è callback_data)
        :return: InlineKeyboardMarkup
        """
        buttons = []
        callback_prefix = f"task_{task_id}_" if task_id else ""

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        buttons.append([
            InlineKeyboardButton(
                "‚úèÔ∏è –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å",
                callback_data=f"{callback_prefix}comment")
        ])

        # –ö–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
        if current_user == BotConfig.ADMIN_USERNAME:
            if task_status == TaskStatuses.NEW:
                buttons.append([
                    InlineKeyboardButton(
                        "üõ† –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É",
                        callback_data=f"{callback_prefix}take")
                ])
            elif task_status == TaskStatuses.IN_PROGRESS:
                buttons.append([
                    InlineKeyboardButton(
                        "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å",
                        callback_data=f"{callback_prefix}complete")
                ])
            elif task_status == TaskStatuses.DONE:
                buttons.append([
                    InlineKeyboardButton(
                        "üîÑ –í–µ—Ä–Ω—É—Ç—å –≤ —Ä–∞–±–æ—Ç—É",
                        callback_data=f"{callback_prefix}reopen")
                ])

            buttons.append([
                InlineKeyboardButton(
                    "üóë –£–¥–∞–ª–∏—Ç—å",
                    callback_data=f"{callback_prefix}delete")
            ])

        buttons.append([Keyboards.get_back_button()])

        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_filters_keyboard(filter_type="status"):
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (InlineKeyboardMarkup)
        :param filter_type: –¢–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞ (status/period)
        :return: InlineKeyboardMarkup
        """
        if filter_type == "status":
            buttons = [
                [
                    InlineKeyboardButton("üîò –í—Å–µ", callback_data="filter_status_all"),
                    InlineKeyboardButton("‚ö™Ô∏è –ù–æ–≤—ã–µ", callback_data="filter_status_new"),
                    InlineKeyboardButton("‚ö™Ô∏è –í —Ä–∞–±–æ—Ç–µ", callback_data="filter_status_in_progress"),
                    InlineKeyboardButton("‚ö™Ô∏è –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ", callback_data="filter_status_done")
                ]
            ]
        else:  # period
            buttons = [
                [
                    InlineKeyboardButton("üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data="filter_period_today"),
                    InlineKeyboardButton("üìÖ –ù–µ–¥–µ–ª—è", callback_data="filter_period_week"),
                    InlineKeyboardButton("üìÖ –ú–µ—Å—è—Ü", callback_data="filter_period_month"),
                    InlineKeyboardButton("üìÖ –í—Å–µ", callback_data="filter_period_all")
                ],
                [
                    InlineKeyboardButton(
                        "üìÖ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥", 
                        callback_data="filter_custom_period")
                ]
            ]

        buttons.append([Keyboards.get_back_button()])
        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_user_management_keyboard(users):
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (InlineKeyboardMarkup)
        :param users: –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ë–î
        :return: InlineKeyboardMarkup
        """
        buttons = []
        for user in users:
            if user[1] == BotConfig.ADMIN_USERNAME:
                continue

            role_icon = "üë§" if user[2] == Roles.USER else "üëî"
            buttons.append([
                InlineKeyboardButton(
                    f"{role_icon} @{user[1]}",
                    callback_data=f"user_detail_{user[1]}")
            ])

        buttons.append([Keyboards.get_back_button()])
        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_user_actions_keyboard(username, current_role):
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (InlineKeyboardMarkup)
        :param username: Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param current_role: –¢–µ–∫—É—â–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: InlineKeyboardMarkup
        """
        buttons = []
        
        if current_role == Roles.USER:
            buttons.append([
                InlineKeyboardButton(
                    "üëî –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º",
                    callback_data=f"promote_{username}")
            ])
        else:
            buttons.append([
                InlineKeyboardButton(
                    "üë§ –ü–æ–Ω–∏–∑–∏—Ç—å –¥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    callback_data=f"demote_{username}")
            ])

        buttons.append([
            InlineKeyboardButton(
                "üóë –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                callback_data=f"delete_user_{username}")
        ])

        buttons.append([Keyboards.get_back_button()])
        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_back_button():
        """–ö–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥' –¥–ª—è –≤—Å–µ—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
        return InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")

    @staticmethod
    def get_confirmation_keyboard(action):
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
        :param action: –î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        :return: InlineKeyboardMarkup
        """
        return InlineKeyboardMarkup([
            [
                InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_{action}"),
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_action")
            ]
        ])